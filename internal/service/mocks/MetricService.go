// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/plusik10/metrics_collection_service/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MetricService is an autogenerated mock type for the MetricService type
type MetricService struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, event
func (_m *MetricService) Create(ctx context.Context, event *model.Event) error {
	ret := _m.Called(ctx, event)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Event) error); ok {
		r0 = rf(ctx, event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMetricService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMetricService creates a new instance of MetricService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMetricService(t mockConstructorTestingTNewMetricService) *MetricService {
	mock := &MetricService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
